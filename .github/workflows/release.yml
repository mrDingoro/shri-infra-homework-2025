name: 2. üèóÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞ (—Ä—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫)

on:
  workflow_dispatch:
    inputs:
      version:
        description: '–í–µ—Ä—Å–∏—è —Ä–µ–ª–∏–∑–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ semver (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1.0.0, 2.1.0)'
        required: true
        type: string
      version_type:
        description: '–¢–∏–ø –≤–µ—Ä—Å–∏–∏'
        required: true
        type: choice
        options:
          - major
          - minor
          - patch
        default: 'patch'
      changes_description:
        description: '–û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ä–µ–ª–∏–∑–µ (—á—Ç–æ –Ω–æ–≤–æ–≥–æ, —á—Ç–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ)'
        required: false
        type: string
        default: '–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è'

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: –ü–æ–ª—É—á–∏—Ç—å –≤–µ—Ç–∫—É —Ä–µ–ª–∏–∑–∞
      uses: actions/checkout@v4

    - name: –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
      run: npm ci

    - name: –ó–∞–ø—É—Å—Ç–∏—Ç—å –ª–∏–Ω—Ç–µ—Ä
      run: npm run lint

  test:
    runs-on: ubuntu-latest

    steps:
    - name: –ü–æ–ª—É—á–∏—Ç—å –≤–µ—Ç–∫—É —Ä–µ–ª–∏–∑–∞
      uses: actions/checkout@v4

    - name: –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
      run: npm ci

    - name: –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
      run: npm test

  typecheck:
    runs-on: ubuntu-latest

    steps:
    - name: –ü–æ–ª—É—á–∏—Ç—å –≤–µ—Ç–∫—É —Ä–µ–ª–∏–∑–∞
      uses: actions/checkout@v4

    - name: –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
      run: npm ci

    - name: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–∏–ø—ã
      run: npx tsc --noEmit

  release:
    needs: [lint, test, typecheck]
    runs-on: ubuntu-latest

    steps:
    - name: –ü–æ–ª—É—á–∏—Ç—å –≤–µ—Ç–∫—É —Ä–µ–ª–∏–∑–∞
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: –í–∞–ª–∏–¥–∞—Ü–∏—è –≤–µ—Ä—Å–∏–∏
      run: |
        VERSION="${{ github.event.inputs.version }}"
        if [[ ! $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–µ—Ä—Å–∏–∏: $VERSION"
          echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: 1.0.0, 2.1.0, etc."
          exit 1
        fi

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–µ—Ä—Å–∏—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if git tag -l | grep -q "^v$VERSION$"; then
          echo "‚ùå –í–µ—Ä—Å–∏—è v$VERSION —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
          exit 1
        fi

        echo "‚úÖ –í–µ—Ä—Å–∏—è $VERSION –≤–∞–ª–∏–¥–Ω–∞"

    - name: –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
      run: npm ci

    - name: –û–±–Ω–æ–≤–∏—Ç—å –≤–µ—Ä—Å–∏—é –≤ package.json
      run: |
        VERSION="${{ github.event.inputs.version }}"
        npm version $VERSION --no-git-tag-version
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add package.json package-lock.json
        git commit -m "chore: bump version to $VERSION"

    - name: –°–æ–±—Ä–∞—Ç—å –ø—Ä–æ–µ–∫—Ç
      run: npm run build

    - name: –°–æ–∑–¥–∞—Ç—å –≤–µ—Ç–∫—É —Ä–µ–ª–∏–∑–∞
      run: |
        VERSION="${{ github.event.inputs.version }}"
        git checkout -b releases/v$VERSION
        git push origin releases/v$VERSION

    - name: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Yandex Container Registry
      uses: docker/login-action@v3
      with:
        registry: cr.yandex
        username: json_key
        password: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

    - name: –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: –°–æ–±—Ä–∞—Ç—å –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å Docker –æ–±—Ä–∞–∑
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${{ github.event.inputs.version }}
          cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${{ github.event.inputs.version }}-latest
          cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:latest
        platforms: linux/amd64

    - name: –°–æ–∑–¥–∞—Ç—å Git —Ç–µ–≥
      run: |
        VERSION="${{ github.event.inputs.version }}"
        git tag v$VERSION
        git push origin v$VERSION

    - name: –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–µ–≥ —Ä–µ–ª–∏–∑–∞
      id: prev_tag
      run: |
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–µ–≥–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ v1.0.0 –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –∏—Ö
        PREV_TAG=$(git tag -l 'v*' | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -2 | head -1)
        if [ -z "$PREV_TAG" ]; then
          PREV_TAG=$(git rev-list --max-parents=0 HEAD)
        fi
        echo "prev_tag=$PREV_TAG" >> $GITHUB_OUTPUT
        echo "–ü—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–µ–≥: $PREV_TAG"

    - name: –ü–æ–ª—É—á–∏—Ç—å –∫–æ–º–º–∏—Ç—ã —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ä–µ–ª–∏–∑–∞
      id: commits
      run: |
        COMMITS=$(git log --oneline ${{ steps.prev_tag.outputs.prev_tag }}..HEAD --pretty=format:"- %s (%h)")
        echo "commits<<EOF" >> $GITHUB_OUTPUT
        echo "$COMMITS" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: –°–æ–∑–¥–∞—Ç—å GitHub Issue
      uses: actions/github-script@v7
      with:
        script: |
          const version = '${{ github.event.inputs.version }}';
          const versionType = '${{ github.event.inputs.version_type }}';
          const changesDescription = '${{ github.event.inputs.changes_description }}' || '–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è';
          const { data: issue } = await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `–†–µ–ª–∏–∑ v${version}`,
            body: `## –†–µ–ª–∏–∑ v${version}

            **–î–∞—Ç–∞:** ${new Date().toLocaleString('ru-RU')}
            **–ê–≤—Ç–æ—Ä —Ä–µ–ª–∏–∑–∞:** @${{ github.actor }}
            **–í–µ—Ä—Å–∏—è:** ${version}
            **–¢–∏–ø:** ${versionType}

            ### üìù –û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π:
            ${changesDescription}

            ### üìã –ö–æ–º–º–∏—Ç—ã:
            ${{ steps.commits.outputs.commits }}

            ### üê≥ Docker –æ–±—Ä–∞–∑—ã:
            - \`cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${version}\`
            - \`cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${version}-latest\`
            - \`cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:latest\`

            ### ‚úÖ –°—Ç–∞—Ç—É—Å:
            –†–µ–ª–∏–∑ —Å–æ–∑–¥–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é
            `,
            labels: ['release', 'deployment', `version:${version}`]
          });

          console.log('–°–æ–∑–¥–∞–Ω issue #' + issue.number);

    - name: –û–±–Ω–æ–≤–∏—Ç—å CHANGELOG.md
      run: |
        VERSION="${{ github.event.inputs.version }}"
        VERSION_TYPE="${{ github.event.inputs.version_type }}"
        CHANGES_DESCRIPTION="${{ github.event.inputs.changes_description }}"

        echo "# Changelog" > temp_changelog.md
        echo "" >> temp_changelog.md
        echo "## [v$VERSION] - $(date +'%Y-%m-%d') ($VERSION_TYPE)" >> temp_changelog.md
        echo "" >> temp_changelog.md

        if [ ! -z "$CHANGES_DESCRIPTION" ]; then
          echo "### üìù –û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π:" >> temp_changelog.md
          echo "$CHANGES_DESCRIPTION" >> temp_changelog.md
          echo "" >> temp_changelog.md
        fi

        echo "### üìã –ö–æ–º–º–∏—Ç—ã:" >> temp_changelog.md
        echo "${{ steps.commits.outputs.commits }}" >> temp_changelog.md
        echo "" >> temp_changelog.md

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ CHANGELOG.md –∏ –Ω–µ –ø—É—Å—Ç–æ–π –ª–∏ –æ–Ω
        if [ -f CHANGELOG.md ] && [ -s CHANGELOG.md ]; then
          # –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –Ω–µ –ø—É—Å—Ç–æ–π
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ä–µ–ª–∏–∑—ã (—Å—Ç—Ä–æ–∫–∏ –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å ##)
          if grep -q "^## \[v" CHANGELOG.md; then
            # –ï—Å—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ä–µ–ª–∏–∑—ã - –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –ø–æ—Å–ª–µ –Ω–æ–≤–æ–≥–æ —Ä–µ–ª–∏–∑–∞
            tail -n +2 CHANGELOG.md >> temp_changelog.md
          else
            # –≠—Ç–æ –±–∞–∑–æ–≤—ã–π CHANGELOG –±–µ–∑ —Ä–µ–ª–∏–∑–æ–≤ - –¥–æ–±–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ—Å–ª–µ –Ω–æ–≤–æ–≥–æ —Ä–µ–ª–∏–∑–∞
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω–æ–µ
            tail -n +2 CHANGELOG.md >> temp_changelog.md
          fi
        else
          # –§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—É—Å—Ç–æ–π - –¥–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
          echo "<!-- –ü—Ä–µ–¥—ã–¥—É—â–∏–µ —Ä–µ–ª–∏–∑—ã –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –∑–¥–µ—Å—å -->" >> temp_changelog.md
        fi

        mv temp_changelog.md CHANGELOG.md

        git add CHANGELOG.md
        git commit -m "docs: update CHANGELOG.md for release v$VERSION"
        git push origin releases/v$VERSION

    - name: –°–æ–∑–¥–∞—Ç—å GitHub Release
      uses: actions/github-script@v7
      with:
        script: |
          const version = '${{ github.event.inputs.version }}';
          const versionType = '${{ github.event.inputs.version_type }}';

          const changesDescription = '${{ github.event.inputs.changes_description }}' || '–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è';

          await github.rest.repos.createRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag_name: `v${version}`,
            name: `Release v${version}`,
            body: `## –†–µ–ª–∏–∑ v${version} (${versionType})

            ### üìù –û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π:
            ${changesDescription}

            ### üìã –ö–æ–º–º–∏—Ç—ã:
            ${{ steps.commits.outputs.commits }}

            ### üê≥ Docker –æ–±—Ä–∞–∑—ã:
            - \`cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${version}\`
            - \`cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:${version}-latest\`
            - \`cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:latest\`
            `,
            draft: false,
            prerelease: false
          });

          console.log('–°–æ–∑–¥–∞–Ω GitHub Release v' + version);


